name: Android CI/CD - Build APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Build type'
        required: true
        default: 'debug'
        type: choice
        options:
        - debug
        - release

jobs:
  build:
    name: Build Android APK
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          build-tools: 34.0.0

      - name: Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            .gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Generate proper Gradle wrapper
        run: |
          # Generate proper gradle wrapper files
          gradle wrapper --gradle-version 8.7 --distribution-type bin
          chmod +x gradlew

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v2

      - name: Setup Keystore (if release)
        if: ${{ github.event.inputs.release_type == 'release' && secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > keystore.jks
          echo "ANDROID_KEYSTORE_PATH=$PWD/keystore.jks" >> $GITHUB_ENV
          echo "ANDROID_KEYSTORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
          echo "ANDROID_KEY_ALIAS=${{ secrets.ANDROID_KEY_ALIAS }}" >> $GITHUB_ENV
          echo "ANDROID_KEY_ALIAS_PASSWORD=${{ secrets.ANDROID_KEY_ALIAS_PASSWORD }}" >> $GITHUB_ENV

      - name: Build Debug APK
        if: ${{ github.event.inputs.release_type != 'release' }}
        run: |
          ./gradlew assembleDebug --stacktrace --info
          
      - name: Build Release APK
        if: ${{ github.event.inputs.release_type == 'release' }}
        run: |
          ./gradlew assembleRelease --stacktrace --info

      - name: Sign APK (fallback for unsigned release)
        if: ${{ github.event.inputs.release_type == 'release' && secrets.ANDROID_KEYSTORE_BASE64 == '' }}
        run: |
          echo "⚠️ No keystore provided - building unsigned release APK"
          echo "To sign releases, add these secrets to your repository:"
          echo "- ANDROID_KEYSTORE_BASE64 (base64 encoded .jks file)"
          echo "- ANDROID_KEYSTORE_PASSWORD"
          echo "- ANDROID_KEY_ALIAS" 
          echo "- ANDROID_KEY_ALIAS_PASSWORD"

      - name: Prepare APK artifacts
        run: |
          mkdir -p build-outputs
          find app/build/outputs/apk -name "*.apk" -exec cp {} build-outputs/ \;
          
          # Rename files for clarity
          cd build-outputs
          for file in *.apk; do
            if [[ "$file" == *
